/**
 * This class is generated by jOOQ
 */
package com.renrenche.jqn.study.jooq.tables.records;


import com.renrenche.jqn.study.jooq.tables.Student;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 学生表
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.8.4"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class StudentRecord extends UpdatableRecordImpl<StudentRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = -828953439;

    /**
     * Setter for <code>history.student.id</code>. 学生id
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>history.student.id</code>. 学生id
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>history.student.name</code>. 学生姓名
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>history.student.name</code>. 学生姓名
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>history.student.comment</code>. 评论
     */
    public void setComment(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>history.student.comment</code>. 评论
     */
    public String getComment() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Student.STUDENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Student.STUDENT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Student.STUDENT.COMMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getComment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentRecord value3(String value) {
        setComment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public StudentRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

//    @Override
//    public Integer component1() {
//        return getId();
//    }
//
//    @Override
//    public String component2() {
//        return getName();
//    }
//
//    @Override
//    public String component3() {
//        return getComment();
//    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StudentRecord
     */
    public StudentRecord() {
        super(Student.STUDENT);
    }

    /**
     * Create a detached, initialised StudentRecord
     */
    public StudentRecord(Integer id, String name, String comment) {
        super(Student.STUDENT);

        set(0, id);
        set(1, name);
        set(2, comment);
    }
}
